{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"anacision PLANNING User guide","text":"<p>anacision PLANNING is a API based product by anacision GmbH.</p> <ul> <li>Link to product information: https://anacision.de/de/loesungen/feinplanung.</li> <li>Link to API: https://planning.anacision.ai/</li> <li>Link to GitHub project to open pull requests for this documentation: https://github.com/anacision/anacision-planning-user-guide</li> </ul>"},{"location":"user_documentation/about_anacision_planning/","title":"About anacision PLANNING","text":"<p>anacision PLANNING is a light-weight advanced planning and scheduling (APS) solution. It determines an automated allocation of production demands and production capacities. anacision PLANNING generates  optimal production plans that answer the following question:</p> <ul> <li>What needs to be produced...</li> <li>on which machines...</li> <li>by which personnel...</li> <li>using which equipment...</li> <li>to meet the production goals?</li> </ul> <p>Examples of production goals are equipment utilization, staff utilization or on-time delivery. A more detailed discussion of how to work with the production goals can be found in the user guide.</p> <p>The plans are generated by a cloud-based service that runs a high-performance genetic algorithm. To access this service, anacision PLANNING provides a standardized, well documented REST API (which can be accessed at  https://planning.anacision.ai/).</p> <p>The API can receive planning requests to return optimized schedules (see usage) and can easily be integrated into existing software such as ERP or MES systems.</p>"},{"location":"user_documentation/about_anacision_planning/#usage","title":"Usage","text":"<p>Generating a production plan with anacision PLANNING requires three steps: 1. Creating a PLANNING request json.  2. Posting the PLANNING request json to the API, which is then optimized by the PLANNING algorithm. 3. Getting the PLANNING job result.</p> <p>Illustration of a possible end to end integrated planning process.</p>"},{"location":"user_documentation/about_anacision_planning/#1-creating-a-planning-request-json","title":"1. Creating a PLANNING request json","text":"<p>The PLANNING request json is the input for each planning job. It is a JSON object that  is based on a standardized data model. Since the cloud-based service is stateless,  each request needs to provide all information that is relevant  for creating a production plan. This includes master data (such as available machines or processing options), as well as dynamic data (such as production quantity, demand or due dates). Examples can be found in functional code samples</p>"},{"location":"user_documentation/about_anacision_planning/#required-input-data","title":"Required input data","text":"<p>This section gives a high-level overview of the required data. Refer to the  technical API documentation for a detailed  description of the whole data model.</p> <ul> <li>Open production tasks: Production tasks that need to be fulfilled. They can be based on client orders or warehouse orders.   If there are multiple processing steps within an order, each step needs to be specified as a task. They can be linked  through predecessor relationships. The task is mainly characterized through:<ul> <li>Earliest date after which the task can start</li> <li>If applicable: Predecessor tasks that have to be processed directly before this task</li> <li>Due date by which the task needs to be finished</li> <li>Which station can process the task? (OR which capability is required to process this task?)</li> <li>Processing time on all stations that can process the task</li> <li>If applicable: which resources are needed to produce the task?</li> </ul> </li> <li>Processing stations: Smallest production unit to which production tasks are assigned. It can be one machine, several machines, a manual workstation or a combination of all. The station is mainly characterized through:<ul> <li>Availability intervals during which the station can process tasks</li> <li>Planned downtimes during which the station is not available (e.g. for inspection)</li> </ul> </li> <li>Limited resources: Resources can be modeled to avoid the same resource being planned for more than its availability. The resources can be equipment, tools or personnel.<ul> <li>Number of available units for each resource (e.g. one small drill, two large drills)</li> <li>If applicable: shift times during which the resource is available. This is especially relevant for scheduling personnel. They can also be used to model set up tasks between the processing tasks</li> <li>If applicable: required resources to perform setup changes</li> <li>Changeover matrices: Time to change from one resource to another within a resource type (e.g. from small drill to large drill)</li> </ul> </li> </ul>"},{"location":"user_documentation/about_anacision_planning/#2-posting-a-planning-request-json-to-the-api","title":"2. Posting a PLANNING request json to the API","text":"<p>The PLANNING request json can be posted to the PLANNING API through the endpoint <code>POST/planning-job</code>. The endpoint parses and validates the request by executing a thorough validation of the input format and returns meaningful error messages if the format is invalid (e.g. a task is assigned a station that has not been defined or has predecessors that are unknown).</p> <p>If all validations pass, the endpoint creates a PLANNING job. </p> <p>The API is connected to a queue where the jobs are being executed one after the other.  The posted job is added to the queue and will be processed as soon as a computing resource becomes available. </p> <p>Upon posting, the endpoint returns a <code>job_id</code> which is a unique identifier for the PLANNING job. It  can be used to check the status of a job and to retrieve the job result once the job has been processed successfully. </p>"},{"location":"user_documentation/about_anacision_planning/#3-getting-the-planning-job-result","title":"3. Getting the PLANNING job result","text":"<p>The result of a PLANNING job can be retrieved by its <code>job_id</code>through the endpoint <code>GET/planning-job{job_id}</code>.</p> <p>It includes the optimized production plan with the following information in json format:</p> <ul> <li>Planned production and setup tasks<ul> <li>Planned startdate and -time</li> <li>Planned enddate and -time</li> <li>Planned station</li> <li>Used resources and equipment</li> </ul> </li> <li>Production KPIs (representatives of production goals), e.g.:<ul> <li>Tardiness</li> <li>Makespan</li> <li>Changeover duration</li> </ul> </li> </ul>"},{"location":"user_guide/user_guide/","title":"anacision PLANNING User Guide","text":"<p>Guide on how to model standard use cases. Note that the requests that are illustrated in this section may be shortened due to readability. The fully functional PLANNING requests can be found in the functional code samples.</p>"},{"location":"user_guide/user_guide/#production-tasks","title":"Production tasks","text":"<p>The production tasks are the production processes that need to be scheduled. They can be single step processes or belong to a chain of multiple processing steps (e.g. 1. cutting raw material, 2. milling the raw cut, 3. painting the finished part). In this case, each of these steps needs to be modeled as a task and they can be linked through a predecessor - successor relationship.</p> <p>This section highlights some ways of modeling certain use cases. Refer to the PLANNING API documentation (https://planning.anacision.ai/)  to get an in-depth description of the task object's attributes.</p>"},{"location":"user_guide/user_guide/#modeling-multi-stage-production","title":"Modeling multi-stage production","text":"<p>Multi-stage production scenarios can be modeled using the <code>predecessor_task_ids</code> field.</p> <p>The following examples are NOT functional. They only serve the purpose of illustrating how the predecessor - successor relationship can be used to model multi-stage production.</p>"},{"location":"user_guide/user_guide/#multi-stage-example-1","title":"Multi-stage example 1","text":"<pre><code>{\n\"tasks\": [\n{\n\"id\": \"cutting\",\n...\n\"predecessor_task_ids\": []\n},\n{\n\"id\": \"milling\",\n...\n\"predecessor_task_ids\": [\n\"cutting\"\n]\n},\n{\n\"id\": \"painting\",\n...\n\"predecessor_task_ids\": [\n\"milling\"\n]\n}\n]\n}\n</code></pre> <p>Example 1 represents three tasks that form a chain where the product is first cut, then milled and finally painted. It cannot be painted before it has been milled and the milling cannot start before the cutting. It is a typical flow shop scenario.</p>"},{"location":"user_guide/user_guide/#multi-stage-example-2","title":"Multi-stage example 2","text":"<pre><code>{\n\"tasks\": [\n{\n\"id\": \"milling_part_1\",\n...\n\"predecessor_task_ids\": []\n},\n{\n\"id\": \"milling_part_2\",\n...\n\"predecessor_task_ids\": []\n},\n{\n\"id\": \"assembly\",\n...\n\"predecessor_task_ids\": [\n\"milling_part_1\",\n\"milling_part_2\"\n]\n}\n]\n}\n</code></pre> <p>Example 2 is a processing chain where one step has multiple predecessors that are independent of each other. The assembly cannot start before the single parts have been milled. But the single parts do not have any other predecessor - successor relationship. As long as both parts are milled before the assembly starts, it is irrelevant when the milling tasks take place.</p>"},{"location":"user_guide/user_guide/#setting-allowed-production-windows","title":"Setting allowed production windows","text":"<p>In many planning and scheduling setups, there may be coarse planning or material resource planning that dictates the time intervals in which tasks can be processed. The most common example is when the production has to take place close to the confirmed due date to avoid building up inventory. At the same time, the procurement of raw materials and the start of the processing of these materials must be well coordinated.</p> <p>The <code>earliest_start_at</code> attribute can be used to ensure that a task is not planned before the raw material has been sourced. In turn, the <code>due_at</code> attribute represents the confirmed due date. If possible, the task will be finished before the due date. Note that it is still possible, that the due date cannot be met due to insufficient production capacities.</p> <pre><code>{\n\"tasks\": [\n{\n\"id\": \"cutting\",\n...\n\"earliest_start_at\":\"2022-02-02T07:00:00+00:00\",\n\"due_at\":\"2022-02-10T22:59:00+00:00\"\n}\n]\n}\n</code></pre>"},{"location":"user_guide/user_guide/#processing-stations","title":"Processing stations","text":"<p>The processing stations are the processing entities to which the tasks are scheduled to. In most cases these are machines, but it can also be stations where tasks can be executed in parallel (e.g. paint shops).  Therefore, each station can have multiple processing slots. Multiple processing slots means that multiple steps can run in parallel. A station with 4 slots can process at most 4 tasks at once, whereas a station with a single slot can be understood as a \"conventional\" machine, that can process one task at a time. A station can also have unlimited processing slots. In this case, it can run an infinite number of steps at once. This makes sense to model external production capacities through service providers.</p> <p>If the PLANNING API is used in a production environment, it is most likely the case that the stations are not empty at  the time of the scheduling execution, but have tasks that are being executed and resources that are mounted. This needs to  be modeled for each production slot within the station.</p> <pre><code>  \"processing_slots\": [\n{\n\"id\": \"slot_01\",\n\"current_task\": {\n\"id\": \"task_01\",\n\"remaining_processing_finishes_at\": \"2022-02-02T13:00:00+00:00\"\n}\n\"current_mounted_resources\": [\n\"R11\"\n]\n}\n]\n</code></pre> <p>In the code snippet above, the station is blocked until February 2nd at 1 pm. Therefore, the algorithm will not schedule any tasks before this timestamp. Also, all successors of <code>task_01</code> will have to wait until the task is finished. Likewise, one resource unit of resource <code>R11</code> is blocked for the same time period.</p>"},{"location":"user_guide/user_guide/#shift-definitions","title":"Shift definitions","text":"<p>There are three types of availability definitions: repeating shift times, planned downtimes (e.g. for maintenance) or unlimited availability of 24/7. Stations, as well as resources can be assigned shift definitions during which they can be utilized. The different types of availabilities can be combined (e.g. unlimited availability except for certain planned downtimes)</p> <p><pre><code>\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"7:00\",\n\"duration\": \"PT08H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n],\n\"planned_downtimes\": [\n{\n\"duration\": \"PT01H\",\n\"downtime_starts_at\": \"2021-02-03T8:00:00.000+00:00\"\n}\n]\n},\n</code></pre> link to fully functional example</p> <p>In the snippet above, the availability combines to a regular shift on monday through friday between 7:00 and 15:00 (8 hours),  with an additional downtime on February 3rd from 8:00 to 9:00 (1 hour). If a task were to start at the beginning of the  shift, it would be paused after the first hour of processing for the planned downtime.</p>"},{"location":"user_guide/user_guide/#production-equipment","title":"Production equipment","text":"<p>Most production settings include resources. For the scheduling algorithm they can indicate two things: </p> <ul> <li>Limited availability </li> <li>Setup changes </li> </ul> <p>Resources that have the same skills or functionality have to be grouped together as <code>resource_types</code>, which in turn include the single resource units.</p>"},{"location":"user_guide/user_guide/#limited-availability","title":"Limited availability","text":"<p>If there is equipment that is shared between different stations but only available in a limited quantity, it cannot be scheduled at more stations that it is available. To do this, it can be modeled explicitly as a resource type  and linked to the tasks that require that piece of equipment.</p> <p> In this example, there is one type of resource that is required to process the tasks (<code>R10</code>). There are three tasks that can be produced on three stations. Without any additional limitations, they could be processed at once, with each on one station.</p> <pre><code>\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_3\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"resource_1\",\n\"resources\": [\n{\n\"id\": \"R10\",\n\"n_available_units\": 3,\n\"setup_duration_sec\": 8,\n\"removal_duration_sec\": 10,\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n</code></pre> <p>link to fully functional example</p> <p>Which leads to the following production plan:  <p></p> <p> However, when reducing the <code>n_available_units</code> to two units, only two tasks can be processed at once, since the third task needs to wait for the resource to become available.</p> <pre><code>\"resource_types\": [\n{\n\"id\": \"resource_1\",\n\"resources\": [\n{\n\"id\": \"R10\",\n\"n_available_units\": 2,\n\"setup_duration_sec\": 8,\n\"removal_duration_sec\": 10,\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n</code></pre> <p>link to fully functional example</p> <p>Which leads to the following production plan. Note that the third station is not being used, since it would lead to a shorter makespan.  <p></p>"},{"location":"user_guide/user_guide/#setup-changes","title":"Setup changes","text":"<p>There are two ways to model the duration of a changeover process: By modeling the time it takes to remove one resource and set up another resource (<code>setup_duration_sec, removal_duration_sec</code>) in the <code>Resource</code> object or by explicitly modeling the <code>deviating_changeover_durations</code> as the required time to change from one resource to another resource. This automatically includes the removal and setup process.</p>"},{"location":"user_guide/user_guide/#usage-of-removal-and-set-up-durations","title":"Usage of removal and set up durations","text":"<p>In this sample, the changeover process is modeled using the removal and setup times for each resource. While <code>task_1</code> requires <code>R10</code>, <code>task_2</code> requires resource <code>R11</code>. Therefore, after <code>task_1</code> is finished, <code>R10</code> needs to be removed and <code>R11</code> needs to be set up which takes the required durations. In this case, 20 seconds for the removal and 20 seconds for the setup.</p> <pre><code>\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [\n\"task_1\"\n],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R11\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"resource_1\",\n\"resources\": [\n{\n\"id\": \"R10\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 10,\n\"removal_duration_sec\": 20,\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"R11\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 20,\n\"removal_duration_sec\": 10,\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n</code></pre> <p>link to fully functional example</p> <p>Which leads to the following production plan:  <p></p> <p></p> <p>Since the mounting and unmounting times can be modeled independent of each other, the sequence of the setup makes a difference. When switching the order of the tasks, the changeover duration between the tasks changes. Instead of the 40 seconds from the example before, it is now reduced to 10 seconds for the removal of <code>R11</code> and 10 seconds for the set up of <code>R10</code>.</p> <p> <p> link to fully functional example</p>"},{"location":"user_guide/user_guide/#usage-of-deviating-changeover-times","title":"Usage of deviating changeover times","text":"<p>The deviating changeovers can also be used to explicitly model changeover matrices between the different products independent of resources that have to be mounted or unmounted. This can be the case if there is no sufficient information about all the resources or if no resources are involved, but there is still a setup process (e.g. for cleaning).</p> <p>For example, if there are three tasks that can be produced on one station with the following changeover durations where the rows are the predecessor tasks and the columns the successors (it takes 200 seconds to change from task_1 to task_3):</p> task_1 task_2 task_3 task_1 X 120 200 task_2 120 X 30 task_3 60 90 X <p>They can be modeled by introducing a new resource type <code>production_on_station_1</code></p> <pre><code>\"resource_types\": [\n{\n\"id\": \"production_on_station_1\",\n\"resources\": [\n{\n\"id\": \"setup_task_1\",\n\"has_unlimited_available_units\": true,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"deviating_changeover_durations\": [\n{\n\"from_resource\": \"setup_task_2\",\n\"duration_sec\": 120\n},\n{\n\"from_resource\": \"setup_task_3\",\n\"duration_sec\": 60\n}\n],\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"setup_task_2\",\n\"has_unlimited_available_units\": true,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"deviating_changeover_durations\": [\n{\n\"from_resource\": \"setup_task_1\",\n\"duration_sec\": 120\n},\n{\n\"from_resource\": \"setup_task_3\",\n\"duration_sec\": 90\n}\n],\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"setup_task_3\",\n\"has_unlimited_available_units\": true,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"deviating_changeover_durations\": [\n{\n\"from_resource\": \"setup_task_1\",\n\"duration_sec\": 200\n},\n{\n\"from_resource\": \"setup_task_2\",\n\"duration_sec\": 30\n}\n],\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n</code></pre> <p>link to fully functional example</p> <p>Which leads to the production plan, where the shortest overall changeover duration is chosen. In this case, it is task_2 -&gt; 30 sec changeover -&gt; task_3 -&gt; 60 sec changeover -&gt; task_1</p> <p> <p></p> <p>Multiple stations that have different influences on the changeover durations can be represented by introducing a new resource_group for each station (<code>production_on_station_2, ...</code>) and adding the relevant resources to each task's processing option.</p>"},{"location":"user_guide/user_guide/#personnel","title":"Personnel","text":"<p>Personnel can be characterized through their shift times and skills. In this example, there are two types of workers. One type that is a machine operator and can process the tasks, whereas another one can perform the setups. There are two operators in the morning shift and one operator in the afternoon shift. This is represented by <code>\"n_available_units\":2</code> and <code>\"n_available_units\":1</code> respectively. Note that the flag <code>release_resource_after_use</code> is set to <code>True</code> which indicates that the resources do not need to be unmounted but instead are released to perform the next task immediately after the task has ended.</p> <p><pre><code>\"resource_types\": [\n{\n\"id\": \"workers_for_processing\",\n\"resources\": [\n{\n\"id\": \"operator_early_shift\",\n\"n_available_units\": 2,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"06:00\",\n\"duration\": \"PT08H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n]\n}\n},\n{\n\"id\": \"operator_afternoon_shift\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"15:00\",\n\"duration\": \"PT08H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n]\n}\n}\n],\n\"release_resource_after_use\": true\n},\n{\n\"id\": \"workers_for_setup\",\n\"resources\": [\n{\n\"id\": \"worker_for_setup\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"08:00\",\n\"duration\": \"PT13H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n]\n}\n}\n],\n\"release_resource_after_use\": true\n}\n],\n</code></pre> link to fully functional example</p> <p>Setting the operator as a resource requirement within a task ensures that the operators are considered when scheduling the task. In this case, the workers in both shifts can execute the task. If their skills were such that only one of the two can operate the task, the other one has to be removed from the resource options. Note that the skills can be modeled on a more granular model by creating a new resource type that groups together worker of a certain skill. This is especially needed if two different skills are required to process a task at the same time.</p> <pre><code>{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"operator_early_shift\",\n\"operator_afternoon_shift\"\n]\n},\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n</code></pre>"},{"location":"user_guide/user_guide/#additional-resources-to-perform-setup-changes","title":"Additional resources to perform setup changes","text":"<p>Finally, resources that are required to perform a setup change can also be included. Use cases for this are workers that have a certain skill or equipment that is only needed for the setup change, but not the processing of the task. This could be cleaning equipment or special tooling. These resources are also set as <code>resource_requirements</code> but instead of setting the requirement within the task, it needs to be set within the resource type it corresponds to.</p> <p>In this case, the resource type <code>resource_1</code> needs a worker to perform the mounting and unmounting process. The setup resource requirements have to be modeled per station. This provides flexibility, in case different resources are required on different stations (e.g. differently skilled personnel or equipment with different technical specifications.)</p> <p><pre><code>\"setup_resource_requirements_by_station\": [\n{\n\"station\": \"Station_1\",\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"worker_for_setup\"\n]\n}\n]\n}\n],\n</code></pre> link to fully functional example</p>"},{"location":"user_guide/user_guide/#production-goals","title":"Production Goals","text":"<p>anacision PLANNING provides different optimization targets that can be applied and combined with each other. When optimizing different targets, they can be combined using weights to indicate the relative importance of each target.</p> <p>In some scenarios, it may be beneficial to only optimize one target, while in other, there can be multiple targets that are relevant.</p> <p>Consider a setting where there is one station that needs to process a set of tasks that require two different tools depending on the product characteristics (a small tool vs. a large tool). The tasks also have due dates by which they need to be fulfilled in order to meet customer demand. Tasks that are not fulfilled in time means that their customer satisfaction will go down, which may lead to less incoming orders.</p> Task Id Processing duration Due date Tool type task_1 2 hrs 2022-02-02 Small task_2 3 hrs 2022-02-03 Large task_3 2 hrs 2022-02-02 Small task_4 2 hrs 2022-02-02 Large task_5 4 hrs 2022-02-03 Small task_6 3 hrs 2022-02-03 Large <p>Removing and setting up a new tool takes 30 mins respectively and the start of the production is on 2022-02-02 with production taking place between 8:00 and 18:00.</p> <p>Optimizing the setup by minimizing the number of tardy tasks looks as follows:</p> <p> <p> link to fully functional example</p> <p>In this production plan, all tasks are finished on time and the total changeover duration is three hours. This corresponds to three switches between the small tool and the large tool. Since the only production target is to reduce the delay, the algorithm has no incentive to further reduce the setup times.</p> <p>To reduce the setup times, an additional target function can be added to reward plans that have the same on-time delivery but with a shorter makespan and thus less setup times.</p> <pre><code>{\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"tardiness\"\n},\n{\n\"weight\": 0.1,\n\"target_function\": \"makespan\"\n}\n]\n}\n</code></pre> <p> <p></p> <p>In this plan, all tasks are still on time, but one resource change has been avoided. Compared to the single target optimization of the tardiness, the plan is equally optimal in terms of the due date fulfillment, but better in the resource changes since one hour of resource change could be avoided.</p> <p>Note that the weights of the target functions indicate the tradeoff between the goals. In this case, a small weight for the <code>makespan</code> is sufficient, as it should not overshadow the optimization of the tardiness. When weighting the resource change duration too heavily, it may be that additional changeovers are avoided at the cost of tasks not being on time.</p> <p> <p></p> <p>One can combine as many targets as desired, but it should be done with care, since too many opposite optimization targets means that there is no clear optimization direction. This can lead to suboptimal plans.</p>"},{"location":"user_guide/working_code_samples/","title":"Functional Code Samples","text":"<p>Supplemental collection of fully working PLANNING request jsons that are mentioned in the documentation.</p>"},{"location":"user_guide/working_code_samples/#shift-definitions","title":"Shift definitions","text":"<p>link to mention in documentation <pre><code>{\n\"stations\": [\n{\n\"id\": \"Station_1\",\n\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"7:00\",\n\"duration\": \"PT08H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n],\n\"planned_downtimes\": [\n{\n\"duration\": \"PT01H\",\n\"downtime_starts_at\": \"2021-02-03T8:00:00.000+00:00\"\n}\n]\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\"\n}\n]\n}\n],\n\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 7200\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 7200\n}\n]\n}\n],\n\"algorithm_parameters\": {\n\"max_rounds\": 20,\n\"population_size\": 400,\n\"mutation_probability\": 0.8,\n\"patience\": 10,\n\"n_elitist_parents\": 10,\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"schedule_length\"\n}\n],\n\"population_initialization_method\": \"heuristic\"\n},\n\"factory_setup\": {\n\"factory_identifier\": \"demo_factory\",\n\"task_delay_between_different_stations_sec\": 0,\n\"buffer_in_extraction_duration_sec\": 1,\n\"buffer_in_dwell_duration_sec\": 1,\n\"buffer_out_dwell_duration_sec\": 1,\n\"start_dates_apply_to_setup\": false\n},\n\"schedule_starts_at\": \"2022-02-02T16:30:00+00:00\"\n}\n</code></pre></p>"},{"location":"user_guide/working_code_samples/#production-resources","title":"Production Resources","text":""},{"location":"user_guide/working_code_samples/#personnel","title":"Personnel","text":"<p>link to mention in documentation <pre><code>{\n\"stations\": [\n{\n\"id\": \"Station_1\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\",\n\"current_mounted_resources\": [\n\"R11\"\n]\n}\n]\n}\n],\n\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"operator_early_shift\",\n\"operator_afternoon_shift\"\n]\n},\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"operator_early_shift\",\n\"operator_afternoon_shift\"\n]\n},\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"resource_1\",\n\"resources\": [\n{\n\"id\": \"R10\",\n\"n_available_units\": 2,\n\"setup_duration_sec\": 8,\n\"removal_duration_sec\": 10,\n\"deviating_changeover_durations\": [\n{\n\"from_resource\": \"R11\",\n\"duration_sec\": 200\n}\n],\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"R11\",\n\"n_available_units\": 2,\n\"setup_duration_sec\": 7,\n\"removal_duration_sec\": 9,\n\"deviating_changeover_durations\": [\n{\n\"from_resource\": \"R10\",\n\"duration_sec\": 300\n}\n],\n\"availability\": {\n\"is_always_available\": true\n}\n}\n],\n\"setup_resource_requirements_by_station\": [\n{\n\"station\": \"Station_1\",\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"worker_for_setup\"\n]\n}\n]\n}\n],\n\"release_resource_after_use\": false\n},\n{\n\"id\": \"workers_for_processing\",\n\"resources\": [\n{\n\"id\": \"operator_early_shift\",\n\"n_available_units\": 2,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"06:00\",\n\"duration\": \"PT08H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n]\n}\n},\n{\n\"id\": \"operator_afternoon_shift\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"15:00\",\n\"duration\": \"PT08H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n]\n}\n}\n],\n\"release_resource_after_use\": true\n},\n{\n\"id\": \"workers_for_setup\",\n\"resources\": [\n{\n\"id\": \"worker_for_setup\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"08:00\",\n\"duration\": \"PT13H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n]\n}\n}\n],\n\"release_resource_after_use\": true\n}\n],\n\"algorithm_parameters\": {\n\"runtime_limit\": 900,\n\"max_rounds\": 20,\n\"population_size\": 400,\n\"mutation_probability\": 0.8,\n\"patience\": 10,\n\"n_elitist_parents\": 10,\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"schedule_length\"\n}\n],\n\"population_initialization_method\": \"heuristic\"\n},\n\"factory_setup\": {\n\"factory_identifier\": \"demo_factory\",\n\"task_delay_between_different_stations_sec\": 0,\n\"buffer_in_extraction_duration_sec\": 1,\n\"buffer_in_dwell_duration_sec\": 1,\n\"buffer_out_dwell_duration_sec\": 1,\n\"start_dates_apply_to_setup\": false\n},\n\"schedule_starts_at\": \"2022-02-02T16:30:00+00:00\"\n}\n</code></pre></p>"},{"location":"user_guide/working_code_samples/#sufficient-resource-units-available","title":"Sufficient resource units available","text":"<p>link to mention in documentation <pre><code>{\n\"stations\": [\n{\n\"id\": \"Station_1\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\",\n\"current_mounted_resources\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"id\": \"Station_2\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\",\n\"current_mounted_resources\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"id\": \"Station_3\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\",\n\"current_mounted_resources\": [\n\"R10\"\n]\n}\n]\n}\n],\n\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_3\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"resource_1\",\n\"resources\": [\n{\n\"id\": \"R10\",\n\"n_available_units\": 3,\n\"setup_duration_sec\": 8,\n\"removal_duration_sec\": 10,\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n\"algorithm_parameters\": {\n\"mutation_probability\": 0.8,\n\"max_rounds\": 20,\n\"n_elitist_parents\": 10,\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"schedule_length\"\n}\n],\n\"population_initialization_method\": \"heuristic\"\n},\n\"factory_setup\": {\n\"factory_identifier\": \"demo_factory\",\n\"task_delay_between_different_stations_sec\": 0\n},\n\"schedule_starts_at\": \"2022-02-02T08:00:00+00:00\"\n}\n</code></pre></p>"},{"location":"user_guide/working_code_samples/#insufficient-resource-units-available","title":"Insufficient resource units available","text":"<p>link to mention in documentation <pre><code>{\n\"stations\": [\n{\n\"id\": \"Station_1\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\",\n\"current_mounted_resources\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"id\": \"Station_2\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\"\n}\n]\n},\n{\n\"id\": \"Station_3\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\"\n}\n]\n}\n],\n\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 20,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 10,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_3\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_2\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n},\n{\n\"station\": \"Station_3\",\n\"duration_sec\": 15,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"resource_1\",\n\"resources\": [\n{\n\"id\": \"R10\",\n\"n_available_units\": 2,\n\"setup_duration_sec\": 8,\n\"removal_duration_sec\": 10,\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n\"algorithm_parameters\": {\n\"mutation_probability\": 0.8,\n\"max_rounds\": 20,\n\"n_elitist_parents\": 10,\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"schedule_length\"\n}\n],\n\"population_initialization_method\": \"heuristic\"\n},\n\"factory_setup\": {\n\"factory_identifier\": \"demo_factory\",\n\"task_delay_between_different_stations_sec\": 0\n},\n\"schedule_starts_at\": \"2022-02-02T08:00:00+00:00\"\n}\n</code></pre></p>"},{"location":"user_guide/working_code_samples/#modeling-changeover-duration","title":"Modeling changeover duration","text":""},{"location":"user_guide/working_code_samples/#using-removal-and-setup-time","title":"Using removal and setup time","text":"<p>link to mention in documentation <pre><code>{\n\"stations\": [\n{\n\"id\": \"Station_1\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\"\n}\n]\n}\n],\n\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [\n\"task_1\"\n],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R11\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"resource_1\",\n\"resources\": [\n{\n\"id\": \"R10\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 10,\n\"removal_duration_sec\": 20,\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"R11\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 20,\n\"removal_duration_sec\": 10,\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n\"algorithm_parameters\": {\n\"mutation_probability\": 0.8,\n\"max_rounds\": 20,\n\"n_elitist_parents\": 10,\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"schedule_length\"\n}\n],\n\"population_initialization_method\": \"heuristic\"\n},\n\"factory_setup\": {\n\"factory_identifier\": \"demo_factory\",\n\"task_delay_between_different_stations_sec\": 0\n},\n\"schedule_starts_at\": \"2022-02-02T08:00:00+00:00\"\n}\n</code></pre></p>"},{"location":"user_guide/working_code_samples/#reversed-order","title":"Reversed order","text":"<p> link to mention in documentation <pre><code>{\n\"stations\": [\n{\n\"id\": \"Station_1\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\"\n}\n]\n}\n],\n\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [\n\"task_2\"\n],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R10\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"R11\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"resource_1\",\n\"resources\": [\n{\n\"id\": \"R10\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 10,\n\"removal_duration_sec\": 20,\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"R11\",\n\"n_available_units\": 1,\n\"setup_duration_sec\": 20,\n\"removal_duration_sec\": 10,\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n\"algorithm_parameters\": {\n\"mutation_probability\": 0.8,\n\"max_rounds\": 200,\n\"n_elitist_parents\": 10,\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"schedule_length\"\n}\n],\n\"population_initialization_method\": \"heuristic\"\n},\n\"factory_setup\": {\n\"factory_identifier\": \"demo_factory\",\n\"task_delay_between_different_stations_sec\": 0\n},\n\"schedule_starts_at\": \"2022-02-02T08:00:00+00:00\"\n}\n</code></pre></p>"},{"location":"user_guide/working_code_samples/#changeover-matrix-on-one-station","title":"Changeover matrix on one station","text":"<p> link to mention in documentation <pre><code>{\n\"stations\": [\n{\n\"id\": \"Station_1\",\n\"availability\": {\n\"is_always_available\": true\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\"\n}\n]\n}\n],\n\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"setup_task_1\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"setup_task_2\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_3\",\n\"predecessor_task_ids\": [],\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 60,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"setup_task_3\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"production_on_station_1\",\n\"resources\": [\n{\n\"id\": \"setup_task_1\",\n\"has_unlimited_available_units\": true,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"deviating_changeover_durations\": [\n{\n\"from_resource\": \"setup_task_2\",\n\"duration_sec\": 120\n},\n{\n\"from_resource\": \"setup_task_3\",\n\"duration_sec\": 60\n}\n],\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"setup_task_2\",\n\"has_unlimited_available_units\": true,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"deviating_changeover_durations\": [\n{\n\"from_resource\": \"setup_task_1\",\n\"duration_sec\": 120\n},\n{\n\"from_resource\": \"setup_task_3\",\n\"duration_sec\": 90\n}\n],\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"setup_task_3\",\n\"has_unlimited_available_units\": true,\n\"setup_duration_sec\": 0,\n\"removal_duration_sec\": 0,\n\"deviating_changeover_durations\": [\n{\n\"from_resource\": \"setup_task_1\",\n\"duration_sec\": 200\n},\n{\n\"from_resource\": \"setup_task_2\",\n\"duration_sec\": 30\n}\n],\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n\"algorithm_parameters\": {\n\"mutation_probability\": 0.8,\n\"max_rounds\": 20,\n\"n_elitist_parents\": 10,\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"schedule_length\"\n}\n],\n\"population_initialization_method\": \"heuristic\"\n},\n\"factory_setup\": {\n\"factory_identifier\": \"demo_factory\",\n\"task_delay_between_different_stations_sec\": 0\n},\n\"schedule_starts_at\": \"2022-02-02T08:00:00+00:00\"\n}\n</code></pre></p>"},{"location":"user_guide/working_code_samples/#production-goals","title":"Production Goals","text":""},{"location":"user_guide/working_code_samples/#minimal-tardiness","title":"Minimal tardiness","text":"<p> link to mention in documentation <pre><code>{\n\"stations\": [\n{\n\"id\": \"Station_1\",\n\"availability\": {\n\"availability_intervals\": [\n{\n\"interval_starts_at\": \"08:00\",\n\"duration\": \"PT10H\",\n\"occurs_from\": \"2021-01-03\",\n\"occurs_until\": \"2023-03-02\",\n\"repeat_on_days_of_week\": [\n\"mon\",\n\"tue\",\n\"wed\",\n\"thu\",\n\"fri\"\n]\n}\n]\n},\n\"processing_slots\": [\n{\n\"id\": \"slot_01\",\n\"current_mounted_resources\": [\n\"small_tool\"\n]\n}\n]\n}\n],\n\"tasks\": [\n{\n\"id\": \"task_1\",\n\"predecessor_task_ids\": [],\n\"due_at\": \"2022-02-02T23:59:59\",\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 7200,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"small_tool\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_2\",\n\"predecessor_task_ids\": [],\n\"due_at\": \"2022-02-03T23:59:59\",\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 18000,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"large_tool\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_3\",\n\"predecessor_task_ids\": [],\n\"due_at\": \"2022-02-02T23:59:59\",\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 7200,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"small_tool\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_4\",\n\"predecessor_task_ids\": [],\n\"due_at\": \"2022-02-02T23:59:59\",\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 7200,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"large_tool\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_5\",\n\"predecessor_task_ids\": [],\n\"due_at\": \"2022-02-03T23:59:59\",\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 14400,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"small_tool\"\n]\n}\n]\n}\n]\n},\n{\n\"id\": \"task_6\",\n\"predecessor_task_ids\": [],\n\"due_at\": \"2022-02-03T23:59:59\",\n\"processing_options\": [\n{\n\"station\": \"Station_1\",\n\"duration_sec\": 10800,\n\"resource_requirements\": [\n{\n\"resource_options\": [\n\"large_tool\"\n]\n}\n]\n}\n]\n}\n],\n\"resource_types\": [\n{\n\"id\": \"tool_for_production\",\n\"resources\": [\n{\n\"id\": \"small_tool\",\n\"has_unlimited_available_units\": true,\n\"setup_duration_sec\": 1800,\n\"removal_duration_sec\": 1800,\n\"availability\": {\n\"is_always_available\": true\n}\n},\n{\n\"id\": \"large_tool\",\n\"has_unlimited_available_units\": true,\n\"setup_duration_sec\": 1800,\n\"removal_duration_sec\": 1800,\n\"availability\": {\n\"is_always_available\": true\n}\n}\n]\n}\n],\n\"algorithm_parameters\": {\n\"mutation_probability\": 0.8,\n\"max_rounds\": 40,\n\"population_size\":200,\n\"n_elitist_parents\": 10,\n\"optimization_targets\": [\n{\n\"weight\": 1,\n\"target_function\": \"tardy_orders\"\n}\n],\n\"population_initialization_method\": \"heuristic\"\n},\n\"factory_setup\": {\n\"factory_identifier\": \"demo_factory\",\n\"task_delay_between_different_stations_sec\": 0\n},\n\"schedule_starts_at\": \"2022-02-02T08:00:00+00:00\"\n}\n</code></pre></p>"}]}